geom_histogram(stat = "count") +
scale_fill_manual(values = c("Democratic" = "blue", "Republican" = "red"))
labs(x = "Political Party", y = "Number of Representatives")
##
#propublica_result <- GetProPublicaRepsInfo(propublica.key)
propublica_reps <- PrepareProPublicaVisualization(propublica_result)
ggplot(propublica_reps, aes(party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("Democratic" = "blue", "Republican" = "red")) +
labs(x = "Political Party", y = "Number of Representatives")
ggplot(propublica_reps, aes(party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("Democratic" = "blue", "Republican" = "red")) +
labs(x = "Political Party", y = "Number of Representatives")
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
ggplot(propublica_reps, aes(party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("Democratic" = "blue", "Republican" = "red")) +
labs(x = "Political Dingus", y = "Number of Representatives")
ggplot(propublica_reps, aes(party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
ggplot(propublica_reps, aes(party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Smoker", y = "Number of Representatives")
ggplot(propublica_reps, aes(party, col = party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
ggplot(propublica_reps, aes(party, fill = party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
ggplot(propublica_reps, aes(party, fill = party)) +
geom_histogram(stat = "count") +
#scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
ggplot(propublica_reps, aes(party, fill = party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
ggplot(propublica_reps, aes(party, fill = party)) +
geom_histogram(stat = "bins") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
## load API keys
source("keys.R")
## you may also load necessary libraries and set various options here
library(dplyr)
library(ggplot2)
library(jsonlite)
library(httr)
#knitr::opts_chunk$set(error=TRUE)
# continue compiling on error
## insert your address here.  It does not to have quite complete.
## Test your code with addresses in different states, see if it works
address <- "Edmonds, Washington"
## Make the main computations here.  Keep the functions in a separate file(s)
## and only include the final operations here.
## You have to 'source()' your main R file(s) here:
source('process_data.R')
google_result <- GetGoogleRepsInfo(google.key, address)
officials_table <- MakeTableOfOfficials(google_result)
## You may also have to do some additional processing here
## You may want to print the table in a nice way using `knitr::kable()`
## when you have already created it.
knitr::kable(officials_table)
##
#propublica_result <- GetProPublicaRepsInfo(propublica.key)
propublica_reps <- PrepareProPublicaVisualization(propublica_result)
ggplot(propublica_reps, aes(party)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("Democratic" = "blue", "Republican" = "red")) +
labs(x = "Political Party", y = "Number of Representatives")
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_vis)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
heck <- temp_result2$results
View(heck)
View(heck)
heck["votes"]
heck_votes <- heck$votes
heck_votes <- data.frame(heck$votes)
View(heck_votes)
View(heck_votes)
heckerino_voterino <- data.frame(heck$votes)
View(heckerino_voterino)
View(heckerino_voterino)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
dongo <- unlist(temp_result2$results$votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(heck_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
install.packages(data.table)
install.packages("data.table")
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_votes)
names(temp_votes)
colnames(temp_votes)
rownames(temp_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_vis)
View(temp_votes)
traceback()
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_votes)
View(temp_votes)
View(temp_votes)
View(temp_votes)
View(temp_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
temp_votes[1,"X5"]
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(temp_votes)
View(temp_votes)
dongo <- temp_info$votes
dongo <- unlist(temp_info$votes)
dongo <- temp_info$votes
dongo <- temp_info$votes[1]
dongo <- temp_info$votes[2]
dongo <- temp_info$votes[1]
dongo <- temp_info$votes[[]]
dongo <- temp_info$votes[[1]]
View(dongo)
colnames(dongo)
dongo$bill
dongo <- as.data.frame(dongo)
View(dongo)
View(temp_votes)
View(temp_info)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
## load API keys
source("keys.R")
## you may also load necessary libraries and set various options here
library(dplyr)
library(ggplot2)
library(jsonlite)
library(httr)
#knitr::opts_chunk$set(error=TRUE)
# continue compiling on error
## insert your address here.  It does not to have quite complete.
## Test your code with addresses in different states, see if it works
address <- "Edmonds, Washington"
## Make the main computations here.  Keep the functions in a separate file(s)
## and only include the final operations here.
## You have to 'source()' your main R file(s) here:
source('process_data.R')
#get google civic information representatives data then format into a table
google_result <- GetGoogleRepsInfo(google.key, address)
google_reps_info <- MakeTableOfOfficials(google_result)
#get propublica representatives data then get info for visualizations
propublica_result <- GetProPublicaRepresentatives(propublica.key)
propublica_reps_info <- PrepareProPublicaVisualization(propublica_result)
#get propublica data on a specific representative
propublica_rep <- GetProPublicaRepInfo(propublica.key, propublica_reps_info, 10)
propublica_rep_info <- OrganizeProPublicaRepInfo(propublica_rep)
## You may also have to do some additional processing here
## You may want to print the table in a nice way using `knitr::kable()`
## when you have already created it.
knitr::kable(google_reps_info)
##
ggplot(propublica_reps_info, aes(party, fill = party)) +
geom_bar(stat = "count") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
##
ggplot(propublica_reps_info, aes(gender, fill = gender)) +
geom_bar(stat = "count") +
labs(x = "Gender", y = "Number of Representatives")
View(propublica_rep)
View(propublica_rep)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(propublica_reps_info)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
install.packages("tidyr")
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(denny)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
denny
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(propublica_rep)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(denny)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(denny)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(denny)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(denny_voting)
colnames(denny_voting)[max(denny_voting$yes, denny_voting$no)]
max(denny_voting$yes, denny_voting$no)
max(denny_voting$yes[], denny_voting$no[])
max(denny_voting$yes[1,], denny_voting$no[1,])
denny_voting[1,]
max(denny_voting[1,]$yes, denny_voting[1,]$no)
colnames(max(denny_voting[1,]$yes, denny_voting[1,]$no))
colnames(denny_voting[1,] == max(denny_voting[1,]$yes, denny_voting[1,]$no))
colnames(denny_voting[] == max(denny_voting[1,]$yes, denny_voting[1,]$no))
colnames(denny_voting)[max.col(denny_voting, 1, which.max)]
colnames(denny_voting)[max.col(denny_voting, ties.method ="first")]
colnames(denny_voting)[apply(denny_voting,1,which.max)]
colnames(denny_voting)[apply(denny_voting,2,which.max)]
colnames(denny_voting)[apply(denny_voting,1,which.max)]
warnings()
colnames(denny_voting)[apply(denny_voting,1,which.max)]
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
denny_voting
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
denny_voting
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
## load API keys
source("keys.R")
## you may also load necessary libraries and set various options here
library(dplyr)
library(ggplot2)
library(jsonlite)
library(httr)
#knitr::opts_chunk$set(error=TRUE)
# continue compiling on error
## insert your address here.  It does not to have quite complete.
## Test your code with addresses in different states, see if it works
address <- "Edmonds, Washington"
## Make the main computations here.  Keep the functions in a separate file(s)
## and only include the final operations here.
## You have to 'source()' your main R file(s) here:
source('process_data.R')
#get google civic information representatives data then format into a table
google_result <- GetGoogleRepsInfo(google.key, address)
google_reps_info <- MakeTableOfOfficials(google_result)
#get propublica representatives data then get info for visualizations
propublica_result <- GetProPublicaRepresentatives(propublica.key)
propublica_reps_info <- PrepareProPublicaVisualization(propublica_result)
#get propublica data on a specific representative
propublica_rep <- GetProPublicaRepInfo(propublica.key, propublica_reps_info, 10)
propublica_rep_info <- OrganizeProPublicaRepInfo(propublica_rep)
## You may also have to do some additional processing here
## You may want to print the table in a nice way using `knitr::kable()`
## when you have already created it.
knitr::kable(google_reps_info)
##
ggplot(propublica_reps_info, aes(party, fill = party)) +
geom_bar(stat = "count") +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Political Party", y = "Number of Representatives")
##
ggplot(propublica_reps_info, aes(gender, fill = gender)) +
geom_bar(stat = "count") +
labs(x = "Gender", y = "Number of Representatives")
View(propublica_rep)
denny_votes <- propublica_rep$votes_position
denny_votes <- unlist(denny_votes)
source('C:/Users/Wesley/Desktop/Programming/INFO201/a5-report-kevinwork98/process_data.R')
View(denny_votes)
majority <-
colnames(voting_history)[apply(voting_history, MARGIN = 1, FUN = which.max)]
majority <-
colnames(denny_votes)[apply(denny_votes FUN = which.max)]
majority <-
colnames(denny_votes)[apply(denny_votes, MARGIN = 1, FUN = which.max)]
majority
with_majority <-
(tolower(denny_votes$votes_position) == majority)
with_majority
length(majority)
7/20
percent_with_majority <-
sum(with_majority, na.rm = TRUE) / length(majority) * 100
propublica_rep_info[5]
source('~/.active-rstudio-document', echo=TRUE)
install.packages("FNN")
library(FNN)
train <- createRandomData(300)
source('C:/Users/Wesley/Desktop/programming/info201/ex-machine-learning/ex1-random2d/DGP.R', echo=TRUE)
train <- createRandomData(300)
View(train)
library(dplyr)
library(FNN)
trainFeatures <- train %>% select(x,y)
trainLabels <- train$labels
FNN::knn(train, trainFeatures, trainLabels, 5)
FNN::knn(train, predict, trainLabels, 5)
FNN::knn(train, trainFeatures, trainLabels, 5)
FNN::knn(train, train, trainLabels, 5)
shiny::runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/a8-shiny-kevinwork98/cereal_app')
shiny::runApp('C:/Users/Wesley/Desktop/Programming/INFO201/kkdc-dish_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/kkdc-dish_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/kkdc-dish_app')
View(ny_menus)
View(ny_pages)
View(ny_dishes)
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/kkdc-dish_app')
ny_pages <- select(ny_pages, -X)
ny_menus <- select(ny_menus, -X)
write.csv(ny_menus, "data/new_york_menus.csv")
write.csv(ny_pages, "data/new_york_pages.csv")
setwd("~/../desktop/programming/kkdc-dish_app")
getwd()
setwd("~/../desktop/programming/info201/kkdc-dish_app")
write.csv(ny_menus, "data/new_york_menus.csv")
write.csv(ny_pages, "data/new_york_pages.csv")
View(ny_dishes)
ny_dishes <- select(ny_dishes, -X)
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
write.csv(ny_pages, "data/new_york_pages.csv", row.names = FALSE)
write.csv(ny_dishes, "data/new_york_dishes.csv", row.names = FALSE)
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/kkdc-dish_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/kkdc-dish_app')
runApp('C:/Users/Wesley/Desktop/Programming/INFO201/kkdc-dish_app')
ny_menus <- read.csv("data/new_york_menus.csv")
ny_menus <- read.csv("data/nyMenusLatLong.csv")
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
ny_menus <- read.csv("data/new_york_menus.csv")
View(ny_menus)
binko$dongo <- c(1, 2, 3, 4, 5)
binko <- data.frame()
binko$dongo <- c(1, 2, 3, 4, 5)
binko <- data.frame(location, menu_id, menu_page_id, dish_id, dish_name)
binko <- data.frame(location = character(), menu_id = integer, menu_page_id = integer, dish_id = integer, dish_name = character())
View(binko)
shiny::runApp()
install.packages("lubridate")
runApp()
View(ny_menus)
ny_menus$location_date <- paste0(ny_menus$location, ", ", ny_menus$date)
runApp()
install.packages("leaflet")
runApp()
runApp()
runApp()
ny_menus$location_date <- paste0(ny_menus$location, ", ", ny_menus$date)
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
runApp()
ny_menus <- read.csv("data/nyMenusCoor.csv")
ny_menus <- select(ny_menus, id, place, location, date, lat, lng)
ny_menus$location_date <- paste0(ny_menus$location, ", ", ny_menus$date)
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
runApp()
binko <- list("hello", c(1, 2, 3))
binko[1]
binko[2]
runApp()
runApp()
runApp()
runApp()
runApp()
bingo <- findDishRestaurant("", "")
bingo[1]
bingo[1]$name
unlist(bingo[1])$name
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
shiny::runApp()
getwd()
runApp()
ny_menus <- filter(ny_menus, 1900 <= year(as.Date(date)) & year(as.Date(date)) <= 1910)
ny_menus <- filter(ny_menus, lat != 0)
ny_menus <- ny_menus[!duplicated(ny_menus$lat), ]
ny_pages <- filter(ny_pages, menu_id %in% ny_menus$id)
ny_dishes <- filter(ny_dishes, menu_page_id %in% ny_pages$id)
View(ny_menus)
ny_menus <- read.csv("data/new_york_menus.csv")
ny_pages <- read.csv("data/new_york_pages.csv")
ny_dishes <- read.csv("data/new_york_dishes.csv")
ny_menus <- filter(ny_menus, 1900 <= year(as.Date(date)) & year(as.Date(date)) <= 1910)
ny_menus <- filter(ny_menus, lat != 0)
ny_pages <- filter(ny_pages, menu_id %in% ny_menus$id)
ny_dishes <- filter(ny_dishes, menu_page_id %in% ny_pages$id)
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
write.csv(ny_pages, "data/new_york_pages.csv", row.names = FALSE)
write.csv(ny_dishes, "data/new_york_dishes.csv", row.names = FALSE)
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
ny_pages <- filter(ny_pages, id %in% ny_dishes$menu_page_id)
ny_menus <- filter(ny_menus, id %in% ny_pages$menu_id)
write.csv(ny_menus, "data/new_york_menus.csv")
write.csv(ny_pages, "data/new_york_pages.csv")
runApp()
write.csv(ny_pages, "data/new_york_pages.csv", row.names = FALSE)
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
ny_pages <- select(ny_pages, -X)
ny_menus <- select(ny_menus, -X)
write.csv(ny_menus, "data/new_york_menus.csv", row.names = FALSE)
write.csv(ny_pages, "data/new_york_pages.csv", row.names = FALSE)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
